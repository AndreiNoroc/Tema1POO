Starting audit...
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:15: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:15:131: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:22:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:26:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:30:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:34:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getViewed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getViewed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:38:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:40:24: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:41:53: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:45:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:45:31: Parameter video should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:55:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setView' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:55:27: Parameter video should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:58: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:58:33: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:58:41: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:61:33: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:61:41: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:29: Parameter movies should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:54: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:87: Parameter video should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:65:101: Parameter grade should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/user/User.java:89: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:21: Line is longer than 100 characters (found 313). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:37:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:41:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:45:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:49:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:53:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getObjectType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getObjectType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:57:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSortType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSortType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:61:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCriteria' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCriteria' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:65:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:69:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:73:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:77:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGrade' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGrade' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:81:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSeasonNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSeasonNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/action/Action.java:85:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:16: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:23:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:27:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:31:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:35:5: Class 'Actor' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actor' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39:35: Parameter actor should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39:49: Parameter movies should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39:74: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:39:106: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:47: Parameter N should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:51: Name 'N' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:54: Parameter actors should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:79: Parameter movies should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:63:104: Parameter seasons should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:68:24: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:68:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:69:32: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:69:47: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:69:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:70: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/getactor/Actor.java:70:123: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:7:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:13: Line is longer than 100 characters (found 170). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:21:5: Class 'SerialSeason' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SerialSeason' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:21:27: Parameter grade should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:26:5: Class 'SerialSeason' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SerialSeason' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:30:5: Class 'SerialSeason' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SerialSeason' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:34:5: Class 'SerialSeason' looks like designed for extension (can be subclassed), but the method 'getNo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SerialSeason' final or making the method 'getNo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/SerialSeason.java:38:5: Class 'SerialSeason' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SerialSeason' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Video.java:11: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Video.java:18:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Video.java:22:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Video.java:26:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Video.java:30:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:9: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:15:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:15:27: Parameter grade should be final. [FinalParameters]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:19:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/video/Movie.java:22:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:84: Line is longer than 100 characters (found 128). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:95: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:106: Line is longer than 100 characters (found 158). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:116: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:126: Line is longer than 100 characters (found 266). [LineLength]
[ERROR] /home/andrei/Desktop/POO/Tema1POO/teme/tema1/Tema-POO-2020/./src/main/Main.java:150: Line is longer than 100 characters (found 123). [LineLength]
Audit done.
Checkstyle ends with 94 errors.
